name: CI

on:
  push:
  pull_request:
    branches: [ master ]

env:
  CI: true
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write

    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main

      # Install all used/required dependencies
      - name: Prepare environment
        run: |
          nix-shell bin/shell.nix --run "echo neo4j installed."
          nix-shell --run "npx playwright install chromium --with-deps; echo Development tools installed."
          # Create dirs
          mkdir -p reports playwright/reports cypress/reports k6/reports

      # Build the app
      - name: Build
        id: build
        continue-on-error: true
        run: |
          nix-shell --run "npm run build"

      - name: Scan code
        uses: JetBrains/qodana-action@v2024.1
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}

      # Run component tests even if build failed
      - name: Test components
        id: componentTests
        if: always()
        continue-on-error: true
        run: |
          nix-shell --run "npm run test"

      # Run API tests
      - name: Test API
        id: apiTests
        if: always() && steps.build.outcome == 'success'
        continue-on-error: true
        run: |
          bin/neo4j-init --script src/lib/data/kennedies.cypher
          npm start &> playwright/reports/server.log &
          nix-shell --run "npx playwright test"

      # Run end to end tests
      - name: Test UI
        id: e2eTests
        if: always() && steps.build.outcome == 'success'
        continue-on-error: true
        run: |
          # Kill server if running
          kill `ps -ef | grep next-server | grep -v grep | awk '{print $2}'` ||:
          bin/neo4j-init --script src/lib/data/kennedies.cypher
          npm start &> cypress/reports/server.log &
          nix-shell --run "npx cypress run --browser firefox"

      # Run k6
      - name: Load test
        id: loadTests
        if: always() && steps.build.outcome == 'success'
        continue-on-error: true
        run: |
          # Kill server if running
          kill `ps -ef | grep next-server | grep -v grep | awk '{print $2}'` ||:
          bin/neo4j-init --script src/lib/data/kennedies.cypher
          npm start &> k6/reports/server.log &
          nix-shell --run "k6 run k6/calendar.js"

      # Archive results
      - name: Archive test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            reports
            playwright/reports
            cypress/reports
            k6/reports
          if-no-files-found: ignore

      # Conclude overall result
      - name: Check status
        if: always()
        run: |
          [[ ${{ steps.build.outcome }} == "success" ]] || {
            echo "'Build' step failed."
            exit 1
          }
          [[ ${{ steps.componentTests.outcome }} == "success" ]] || {
            echo "'Test components' step failed."
            exit 1
          }
          [[ ${{ steps.apiTests.outcome }} == "success" ]] || {
            echo "'Test API' step failed."
            exit 1
          }
          [[ ${{ steps.e2eTests.outcome }} == "success" ]] || {
            echo "'Test UI' step failed."
            exit 1
          }
          [[ ${{ steps.loadTests.outcome }} == "success" ]] || {
            echo "'Load tests' step failed."
            exit 1
          }
